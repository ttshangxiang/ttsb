{"version":3,"sources":["components/Frame/Menus.tsx","components/Frame/index.tsx","pages/Home.tsx","pages/Life/index.tsx","pages/Resources/ResGroup.tsx","pages/Resources/GroupSelect.tsx","pages/Resources/EditResModal.tsx","pages/Resources/index.tsx","pages/Resources/UploadRes.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["SubMenu","menus","name","sub","path","Menus","state","selectedKeys","openKeys","prevProps","this","props","location","setSelectedClass","document","querySelectorAll","forEach","item","key","getAttribute","open","obj","includes","concat","setState","id","mode","onSelect","onOpenChange","keys","style","height","forceSubMenuRender","map","index","title","type","ii","iindex","Item","to","activeClassName","data-key","data-open","Component","withRouter","Header","Content","Footer","Sider","Frame","className","theme","defaultSelectedKeys","lineHeight","padding","margin","background","width","minHeight","children","textAlign","Home","Life","Option","groupList","getting","loadGroups","a","axios","url","params","then","res","data","code","message","error","msg","catch","err","lastPromise","getGroups","length","setGroups","list","formItemLayout","labelCol","span","wrapperCol","GroupForm","getFieldDecorator","form","label","rules","required","initialValue","value","Group","GroupFormI","create","ResGroup","modalVisible","isEdit","editId","columns","dataIndex","render","text","src","record","onClick","openEdit","setTimeout","resetFields","_id","setFields","description","thumb","status","validateFields","values","method","success","reloadList","marginRight","openAdd","paddingTop","dataSource","centered","maskClosable","okText","cancelText","visible","onOk","handleOk","onCancel","handleCancel","wrappedComponentRef","GroupSelect","change","showSearch","Object","assign","placeholder","optionFilterProp","onChange","filterOption","input","option","toLowerCase","indexOf","hideAll","ReadOnlyText","ReadOnlyImg","normal","position","maxWidth","ReadOnlyA","target","href","ResForm","ResFormI","EditResModal","filename","groups","size","num","changeCurrent","marginTop","paddingBottom","Search","Resources","pageSize","total","filterGroup","newGroup","keyWords","inChangeGroupId","editResModal","cursor","display","tags","tag","groupMap","inChangeGroup","resList","selectedRowKeys","loading","page","onRowSelectChange","editIndex","offset","count","loadRes","resetSelectd","reloadRes","adds","subs","o","isSelectd","push","info","windex","new_index","showEdit","rowSelection","onFilterSelectChange","onSearch","marginLeft","startChangeGroup","onNewSelectChange","doChangeGroup","overflow","rowKey","pagination","current","hideOnSinglePage","showSizeChanger","defaultPageSize","pageSizeOptions","showQuickJumper","onShowSizeChange","ref","ins","changCurrent","Dragger","UploadRes","groupId","defaults","baseURL","multiple","action","file","App","exact","component","Boolean","window","hostname","match","headers","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8af1dfd3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Menu, Icon } from 'antd';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nconst menus = [\r\n  {\r\n    name: '生涯',\r\n    sub: [\r\n      {\r\n        name: '生活',\r\n        path: '/life/live'\r\n      },\r\n      {\r\n        name: '游戏',\r\n        path: '/life/game'\r\n      },\r\n      {\r\n        name: '影视',\r\n        path: '/life/media'\r\n      },\r\n      {\r\n        name: '阅读',\r\n        path: '/life/read'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    name: '评论',\r\n    path: '/comments'\r\n  },\r\n  {\r\n    name: '资源',\r\n    sub: [\r\n      {\r\n        name: '内容',\r\n        path: '/resources'\r\n      },\r\n      {\r\n        name: '上传',\r\n        path: '/resources/upload'\r\n      },\r\n      {\r\n        name: '分组',\r\n        path: '/resources/group'\r\n      }\r\n    ]\r\n  }\r\n]\r\n\r\ninterface props {\r\n  location: any;\r\n}\r\n\r\ninterface state {\r\n  selectedKeys: string[]\r\n  openKeys: string[]\r\n}\r\n\r\nclass Menus extends Component<props, state> {\r\n\r\n  state: state = {\r\n    selectedKeys: [],\r\n    openKeys: []\r\n  }\r\n\r\n  componentDidUpdate(prevProps: any) {\r\n    const locationChanged =\r\n      this.props.location !== prevProps.location;\r\n    \r\n    if (locationChanged) {\r\n      this.setSelectedClass()\r\n    }\r\n  }\r\n\r\n  setSelectedClass () {\r\n    document.querySelectorAll('#jhq-menu a.aaa').forEach(item => {\r\n      const key = item.getAttribute('data-key');\r\n      const open = item.getAttribute('data-open');\r\n      const obj: any = {}\r\n      key && (obj.selectedKeys = [key]);\r\n      open && !this.state.openKeys.includes(open)\r\n        && (obj.openKeys = [open].concat(this.state.openKeys));\r\n      this.setState(obj);\r\n    })\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.setSelectedClass()\r\n  }\r\n\r\n  render() {\r\n    const activeClassName = 'aaa';\r\n    return (\r\n      <Menu\r\n        id=\"jhq-menu\"\r\n        mode=\"inline\"\r\n        selectedKeys={this.state.selectedKeys}\r\n        onSelect={({key}) => this.setState({selectedKeys: [key]})}\r\n        openKeys={this.state.openKeys}\r\n        onOpenChange={keys => this.setState({openKeys: keys})}\r\n        style={{ height: '100%' }}\r\n        forceSubMenuRender={true}\r\n      >\r\n        {menus.map((item, index) => {\r\n          if (item.sub) {\r\n            return (\r\n              <SubMenu key={index} title={<span><Icon type=\"user\" />{item.name}</span>}>\r\n                {item.sub.map((ii, iindex) => (\r\n                  <Menu.Item key={index + '-' + iindex}>\r\n                    <NavLink to={ii.path} activeClassName={activeClassName} data-key={index + '-' + iindex} data-open={index}>{ii.name}</NavLink>\r\n                  </Menu.Item>\r\n                ))}\r\n              </SubMenu>\r\n            )\r\n          } else {\r\n            return (<Menu.Item key={index}>{\r\n              <NavLink to={item.path} activeClassName={activeClassName} data-key={index}><span><Icon type=\"user\" />{item.name}</span></NavLink>\r\n            }</Menu.Item>)\r\n          }\r\n        })}\r\n      </Menu>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Menus as any)\r\n","import React, { Component } from 'react';\r\nimport { Layout, Menu, Breadcrumb } from 'antd';\r\nimport Menus from './Menus'\r\nimport './style.css';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nclass Frame extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Layout id=\"components-layout-demo-top-side\">\r\n        <Header className=\"header\">\r\n          <div className=\"logo\">tts</div>\r\n          <Menu\r\n            theme=\"dark\"\r\n            mode=\"horizontal\"\r\n            defaultSelectedKeys={['2']}\r\n            style={{ lineHeight: '64px' }}\r\n          >\r\n            <Menu.Item key=\"1\">nav 1</Menu.Item>\r\n            <Menu.Item key=\"2\">nav 2</Menu.Item>\r\n            <Menu.Item key=\"3\">nav 3</Menu.Item>\r\n          </Menu>\r\n        </Header>\r\n        <Content style={{ padding: '0 50px' }}>\r\n          <Breadcrumb style={{ margin: '16px 0' }}>\r\n            <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n            <Breadcrumb.Item>List</Breadcrumb.Item>\r\n            <Breadcrumb.Item>App</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n          <Layout style={{ padding: '24px 0', background: '#fff' }}>\r\n            <Sider width={200} style={{ background: '#fff' }}>\r\n              <Menus />\r\n            </Sider>\r\n            <Content style={{ padding: '0 24px', minHeight: 280 }}>{this.props.children}</Content>\r\n          </Layout>\r\n        </Content>\r\n        <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Frame;","import React, { Component } from 'react';\r\n\r\nclass Home extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>摆设</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\n\r\nclass Life extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        摆设\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Life;","import React, { Component } from 'react';\r\nimport { Table, Button, Divider, Tag, message, Form, Modal, Input, Radio, Select } from 'antd';\r\nimport axios from 'axios';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\n\r\nconst { Option } = Select;\r\n\r\nexport interface group {\r\n  ctime?: string;\r\n  utime?: string\r\n  name: string;\r\n  description: string;\r\n  status: number\r\n  thumb: string\r\n  type: string\r\n  _id: string\r\n}\r\n\r\nlet groupList: group[] = [];\r\nlet getting = false;\r\nasync function loadGroups () {\r\n  getting = true;\r\n  return axios({\r\n    url: '/resgroup',\r\n    params: {}\r\n  }).then(res => {\r\n    getting = false\r\n    const { data = {} } = res;\r\n    if (data.code === 0) {\r\n      return data.data;\r\n    } else {\r\n      message.error(data.msg);\r\n    }\r\n  }).catch(err => {\r\n    getting = false\r\n    message.error(err.message);\r\n  })\r\n}\r\n\r\n// 如果在请求中，直接等待上一次的promise\r\nlet lastPromise: any = null\r\nexport async function getGroups () {\r\n  if (groupList && groupList.length > 0) {\r\n    return groupList;\r\n  } else {\r\n    \r\n    if (!lastPromise || !getting) {\r\n      lastPromise = loadGroups()\r\n    }\r\n    const data = await lastPromise;\r\n    if (data && data.data) {\r\n      setGroups(data.data);\r\n      return data.data;\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n}\r\n\r\nexport function setGroups (list: group[]) {\r\n  groupList = list;\r\n}\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    span: 4,\r\n  },\r\n  wrapperCol: {\r\n    span: 20,\r\n  }\r\n}\r\n\r\nclass GroupForm extends Component<{form: any}, {}> {\r\n  render () {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Form {...formItemLayout}>\r\n        <Form.Item label=\"名称\">\r\n          {getFieldDecorator('name', {\r\n            rules: [{ required: true, message: '必填' }]\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"类型\">\r\n          {getFieldDecorator('type', {\r\n            initialValue: 'albums',\r\n          })(\r\n            <Select style={{ width: 120 }}>\r\n              <Option value=\"albums\">相册</Option>\r\n              <Option value=\"words\">文章</Option>\r\n              <Option value=\"type1\">type1</Option>\r\n              <Option value=\"type2\">type2</Option>\r\n              <Option value=\"type3\">type3</Option>\r\n              <Option value=\"type4\">type4</Option>\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"描述\">\r\n          {getFieldDecorator('description', {\r\n            rules: [{ required: true, message: '必填' }]\r\n          })(<TextArea />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"封面\">\r\n          {getFieldDecorator('thumb', {\r\n            rules: []\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"是否展示\">\r\n          {getFieldDecorator('status', {\r\n            initialValue: 1,\r\n          })(\r\n            <Radio.Group>\r\n              <Radio value={1}>是</Radio>\r\n              <Radio value={0}>否</Radio>\r\n            </Radio.Group>\r\n          )}\r\n        </Form.Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nconst GroupFormI = Form.create({})(GroupForm);\r\n\r\ninterface props {\r\n\r\n}\r\n\r\ninterface state {\r\n  groupList: group[];\r\n  modalVisible: boolean;\r\n  isEdit: boolean;\r\n}\r\n\r\nclass ResGroup extends Component<props, state> {\r\n\r\n  state: state = {\r\n    groupList: [],\r\n    modalVisible: false,\r\n    isEdit: false\r\n  }\r\n\r\n  editId: string = '';\r\n\r\n  form: any;\r\n\r\n  columns = [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      render: (text: string) => <a>{text}</a>,\r\n    },\r\n    {\r\n      title: 'Thumb',\r\n      dataIndex: 'thumb',\r\n      key: 'thumb',\r\n      render: (src: string) => {\r\n        if (src) {\r\n          return <img src={src} width={120} />\r\n        } else {\r\n          return '-'\r\n        }\r\n      }\r\n    },\r\n    {\r\n      title: 'type',\r\n      dataIndex: 'type',\r\n      key: 'type',\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n    },\r\n    {\r\n      title: 'Description',\r\n      dataIndex: 'description',\r\n      key: 'description',\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      render: (text: string, record: any) => (\r\n        <span>\r\n          <a onClick={() => this.openEdit(record)}>Edit</a>\r\n          <Divider type=\"vertical\" />\r\n          <a>Delete</a>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  openAdd () {\r\n    this.setState({modalVisible: true, isEdit: false});\r\n    setTimeout(() => {\r\n      this.form.props.form.resetFields();\r\n    }, 10);\r\n  }\r\n\r\n  openEdit (record: group) {\r\n    this.setState({modalVisible: true, isEdit: true});\r\n    this.editId = record._id;\r\n    setTimeout(() => {\r\n      this.form.props.form.setFields({\r\n        name: {value: record.name},\r\n        type: {value: record.type},\r\n        description: {value: record.description},\r\n        thumb: {value: record.thumb},\r\n        status: {value: record.status}\r\n      });\r\n    }, 10);\r\n  }\r\n\r\n  handleOk () {\r\n    const form = this.form.props.form;\r\n    form.validateFields((error: any, values: any) => {\r\n      if (error) {\r\n        return;\r\n      }\r\n      this.setState({modalVisible: false});\r\n      if (this.state.isEdit) {\r\n        axios({\r\n          url: '/resgroup/' + this.editId,\r\n          method: 'put',\r\n          data: values\r\n        }).then(res => {\r\n          const { data = {} } = res;\r\n          if (data.code === 0) {\r\n            message.success('修改成功');\r\n            this.reloadList();\r\n          } else {\r\n            message.error(data.msg);\r\n          }\r\n        }).catch(err => {\r\n          message.error(err.message);\r\n        })\r\n      } else {\r\n        axios({\r\n          url: '/resgroup',\r\n          method: 'post',\r\n          data: values\r\n        }).then(res => {\r\n          const { data = {} } = res;\r\n          if (data.code === 0) {\r\n            message.success('添加成功');\r\n            this.reloadList();\r\n          } else {\r\n            message.error(data.msg);\r\n          }\r\n        }).catch(err => {\r\n          message.error(err.message);\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  async reloadList () {\r\n    setGroups([])\r\n    let groupList = await getGroups()\r\n    this.setState({groupList})\r\n  }\r\n\r\n  handleCancel () {\r\n    this.setState({modalVisible: false})\r\n  }\r\n\r\n  async componentDidMount () {\r\n    let groupList = await getGroups()\r\n    this.setState({groupList})\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <Button style={{marginRight: 8}} onClick={() => this.openAdd()}>新增</Button>\r\n        <div style={{ paddingTop: 12 }}></div>\r\n        <Table columns={this.columns} dataSource={this.state.groupList} />\r\n\r\n        <Modal\r\n          centered\r\n          maskClosable={false}\r\n          width={600}\r\n          title={this.state.isEdit ? '修改' : '新增'}\r\n          okText=\"确定\"\r\n          cancelText=\"取消\"\r\n          visible={this.state.modalVisible}\r\n          onOk={() => this.handleOk()}\r\n          onCancel={() => this.handleCancel()}>\r\n            <GroupFormI wrappedComponentRef={(form: any) => this.form = form}></GroupFormI>\r\n          </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default ResGroup\r\n","import React, { Component } from \"react\";\r\nimport { Select } from \"antd\";\r\nimport { getGroups, group } from './ResGroup'\r\n\r\nconst { Option } = Select;\r\n\r\ninterface props {\r\n  className?: string;\r\n  style?: object;\r\n  placeholder?: string;\r\n  hideAll?: boolean;\r\n  change?: Function;\r\n}\r\n\r\ninterface state {\r\n  groupList: group[]\r\n}\r\n\r\nclass GroupSelect extends Component<props, state> {\r\n\r\n  state: state = {\r\n    groupList: []\r\n  }\r\n\r\n  async componentDidMount () {\r\n    const data = await getGroups();\r\n    this.setState({\r\n      groupList: data\r\n    })\r\n  }\r\n\r\n  onChange (value: any) {\r\n    if (this.props.change) {\r\n      this.props.change(value)\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Select\r\n        showSearch\r\n        className={this.props.className}\r\n        style={Object.assign({ width: 150 }, this.props.style)}\r\n        placeholder={this.props.placeholder ? this.props.placeholder : \"分组\"}\r\n        optionFilterProp=\"children\"\r\n        onChange={value => this.onChange(value)}\r\n        filterOption={(input, option: any) =>\r\n          option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n        }\r\n      >\r\n        {!this.props.hideAll ? <Option key='all' value=\"\" title=\"全部\">全部</Option> : ''}\r\n        {this.state.groupList.map(item => (\r\n          <Option key={item._id} value={item._id} title={item.name}>{item.name}</Option>\r\n        ))}\r\n      </Select>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GroupSelect","import React, { Component } from \"react\";\r\nimport { Form, Input, Select, Radio, Modal, message, Button } from \"antd\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { res } from './index';\r\nimport { getGroups, group } from './ResGroup';\r\nimport axios from 'axios';\r\nconst { Option } = Select;\r\n\r\nclass ReadOnlyText extends Component<any, {}> {\r\n  render () {\r\n    return (\r\n      <div>{this.props.value}</div>\r\n    )\r\n  }\r\n}\r\n\r\nclass ReadOnlyImg extends Component<any, {}> {\r\n\r\n  render () {\r\n    if (!this.props.value || !this.props.value.thumb) {\r\n      return (<div>-</div>);\r\n    }\r\n    let {thumb, normal, width, height} = this.props.value;\r\n    if (!normal || thumb == normal) {\r\n      return (\r\n        <img src={thumb}\r\n          style={{maxWidth: '100%'}}\r\n          key={thumb}/>\r\n      )\r\n    }\r\n    if (width > 626) {\r\n      height = height * 626 / width;\r\n    }\r\n    return (\r\n      <div style={{position: 'relative', minHeight: height}}>\r\n        <img src={thumb} width={width}\r\n          style={{maxWidth: '100%', position: 'absolute'}}\r\n          key={thumb}/>\r\n        <img src={normal}\r\n          style={{maxWidth: '100%', position: 'relative'}}\r\n          key={normal + '-normal'}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass ReadOnlyA extends Component<any, {}> {\r\n  render () {\r\n    return (\r\n      this.props.value ? (\r\n        <a target=\"_blank\" href={this.props.value}>{this.props.value}</a>\r\n      ) : (\r\n        <div>-</div>\r\n      )\r\n    )\r\n  }\r\n}\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    span: 4,\r\n  },\r\n  wrapperCol: {\r\n    span: 20,\r\n  }\r\n}\r\n\r\ninterface formState {\r\n  groupList: group[]\r\n}\r\nclass ResForm extends Component<{form: any}, formState> {\r\n\r\n  state: formState = {\r\n    groupList: []\r\n  }\r\n\r\n  async componentDidMount () {\r\n    const list: group[] = await getGroups()\r\n    this.setState({ groupList: list });\r\n  }\r\n\r\n  render () {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Form {...formItemLayout}>\r\n        <Form.Item label=\"文件名\">\r\n          {getFieldDecorator('filename', {\r\n            rules: [{ required: true, message: '必填' }]\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"描述\">\r\n          {getFieldDecorator('description', {\r\n          })(<TextArea />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"图片\">\r\n          {getFieldDecorator('thumb', {\r\n          })(<ReadOnlyImg />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"分组\">\r\n          {getFieldDecorator('groups', {\r\n          })(\r\n            <Select mode=\"multiple\">\r\n              {this.state.groupList.map(item => (\r\n                <Option value={item._id} key={item._id}>{item.name}</Option>\r\n              ))}\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"类型\">\r\n          {getFieldDecorator('type', {\r\n          })(<ReadOnlyText/>)}\r\n        </Form.Item>\r\n        <Form.Item label=\"大小\">\r\n          {getFieldDecorator('size', {\r\n          })(<ReadOnlyText/>)}\r\n        </Form.Item>\r\n        <Form.Item label=\"原文件\">\r\n          {getFieldDecorator('path', {\r\n          })(<ReadOnlyA/>)}\r\n        </Form.Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nconst ResFormI = Form.create({})(ResForm);\r\n\r\ninterface state {\r\n  modalVisible: boolean;\r\n}\r\ninterface props {\r\n  reloadList?: Function;\r\n  changeCurrent?: Function;\r\n}\r\n\r\nclass EditResModal extends Component<props, state> {\r\n\r\n  state: state = {\r\n    modalVisible: false,\r\n  }\r\n\r\n  form: any;\r\n  editId: string = '';\r\n\r\n  handleOk () {\r\n    const form = this.form.props.form;\r\n    form.validateFields((error: any, values: any) => {\r\n      if (error) {\r\n        return;\r\n      }\r\n      this.setState({modalVisible: false});\r\n      axios({\r\n        url: '/res/' + this.editId,\r\n        method: 'put',\r\n        data: values\r\n      }).then(res => {\r\n        const { data = {} } = res;\r\n        if (data.code === 0) {\r\n          message.success('修改成功');\r\n          this.props.reloadList && this.props.reloadList();\r\n        } else {\r\n          message.error(data.msg);\r\n        }\r\n      }).catch(err => {\r\n        message.error(err.message);\r\n      })\r\n    })\r\n  }\r\n\r\n  handleCancel () {\r\n    this.setState({modalVisible: false});\r\n  }\r\n\r\n  showEdit (record: res) {\r\n    this.setState({modalVisible: true});\r\n    this.editId = record._id;\r\n    setTimeout(() => {\r\n      this.form.props.form.setFields({\r\n        filename: {value: record.filename},\r\n        description: {value: record.description},\r\n        thumb: {value: record},\r\n        groups: {value: record.groups},\r\n        type: {value: record.type},\r\n        size: {value: record.size},\r\n        path: {value: record.path}\r\n      });\r\n    }, 10);\r\n  }\r\n\r\n  changeCurrent (num: number) {\r\n    this.props.changeCurrent && this.props.changeCurrent(num)\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Modal\r\n        centered\r\n        maskClosable={false}\r\n        width={800}\r\n        title={'修改'}\r\n        okText=\"修改\"\r\n        cancelText=\"取消\"\r\n        visible={this.state.modalVisible}\r\n        onOk={() => this.handleOk()}\r\n        onCancel={() => this.handleCancel()}>\r\n          <div style={{textAlign: 'right', marginTop: -6, paddingBottom: 10}}>\r\n            <Button onClick={() => this.changeCurrent(-1)}>上一个</Button>\r\n            <Button onClick={() => this.changeCurrent(1)}>下一个</Button>\r\n          </div>\r\n          <ResFormI wrappedComponentRef={(form: any) => this.form = form}></ResFormI>\r\n        </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditResModal\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Table, Divider, Tag, Button, Input, message } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport GroupSelect from './GroupSelect';\r\nimport axios from 'axios';\r\nimport { getGroups, group } from './ResGroup';\r\nimport EditResModal from './EditResModal';\r\n\r\nconst { Search } = Input;\r\n\r\nexport interface res {\r\n  _id: string;\r\n  utime: string;\r\n  ctime: string;\r\n  filename: string;\r\n  path: string;\r\n  type: string;\r\n  size: string;\r\n  groups: string[];\r\n  status: 0;\r\n\r\n  description: string;\r\n  width?: number;\r\n  height?: number;\r\n  normal?: string;\r\n  thumb?: string;\r\n}\r\n\r\ninterface props {\r\n\r\n}\r\n\r\ninterface state {\r\n  inChangeGroup: boolean;\r\n  resList: res[];\r\n  selectedRowKeys: string[];\r\n  loading: boolean;\r\n  groupMap: {[index: string]: group};\r\n  page: number;\r\n}\r\n\r\nclass Resources extends Component<props, state> {\r\n\r\n  pageSize: number = 10;\r\n  total: number = 0;\r\n  filterGroup: string = '';\r\n  newGroup: string = '';\r\n  keyWords: string = '';\r\n  inChangeGroupId: string = '';\r\n  editResModal: (EditResModal|null) = null;\r\n\r\n  columns = [\r\n    {\r\n      title: 'Thumb',\r\n      dataIndex: 'thumb',\r\n      key: 'thumb',\r\n      render: (src: string, record: res, index: number) => {\r\n        if (src) {\r\n          return <img src={src} width={120} style={{cursor: 'pointer'}} onClick={() => this.openEdit(record, index)}/>\r\n        } else {\r\n          return '-'\r\n        }\r\n      }\r\n    },\r\n    {\r\n      title: 'Id',\r\n      dataIndex: '_id',\r\n      key: '_id',\r\n      render: (text: string, record: res, index: number) => <a onClick={() => this.openEdit(record, index)}>{text}</a>,\r\n    },\r\n    {\r\n      title: 'Filename',\r\n      dataIndex: 'filename',\r\n      key: 'filename',\r\n      render: (text: string) => (\r\n        <span style={{display: 'inline-block', width: 160}}>{text}</span>\r\n      )\r\n    },\r\n    {\r\n      title: 'Size',\r\n      dataIndex: 'size',\r\n      key: 'size'\r\n    },\r\n    {\r\n      title: 'Ctime',\r\n      dataIndex: 'ctime',\r\n      key: 'ctime'\r\n    },\r\n    {\r\n      title: 'Groups',\r\n      dataIndex: 'groups',\r\n      key: 'groups',\r\n      render: (tags: string[]) => {\r\n        return (\r\n          <span>\r\n            {(tags || []).map(tag => {\r\n              return (\r\n                <Tag key={tag}>\r\n                  {this.state.groupMap[tag] && this.state.groupMap[tag].name}\r\n                </Tag>\r\n              );\r\n            })}\r\n          </span>\r\n        ) \r\n      }\r\n    },\r\n    {\r\n      title: 'Description',\r\n      dataIndex: 'description',\r\n      key: 'description',\r\n      render: (text: string) => (\r\n        <span style={{display: 'inline-block', width: 160}}>{text}</span>\r\n      )\r\n    }\r\n  ];\r\n\r\n  state: state = {\r\n    inChangeGroup: false,\r\n    resList: [],\r\n    selectedRowKeys: [],\r\n    loading: false,\r\n    groupMap: {},\r\n    page: 1\r\n  };\r\n\r\n  async loadRes (page = 1) {\r\n    this.setState({page});\r\n    this.setState({loading: true});\r\n    const params: any = {\r\n      offset: (page - 1) * this.pageSize,\r\n      count: this.pageSize\r\n    };\r\n    if (this.keyWords !== '') {\r\n      params.type = 'like.' + this.keyWords;\r\n      params.filename = 'like.' + this.keyWords;\r\n      params.description = 'like.' + this.keyWords;\r\n    }\r\n    if (this.filterGroup !== '') {\r\n      params.groups = 'includes.' + this.filterGroup;\r\n    }\r\n    return axios({\r\n      url: '/res',\r\n      params: params\r\n    }).then(res => {\r\n      this.setState({loading: false});\r\n      const { data = {} } = res;\r\n      if (data.code === 0) {\r\n        return data.data;\r\n      } else {\r\n        message.error(data.msg);\r\n      }\r\n    }).catch(err => {\r\n      this.setState({loading: false});\r\n      message.error(err.message)\r\n    })\r\n  }\r\n\r\n  async reloadRes (page = 1) {\r\n    const data = await this.loadRes(page);\r\n    const list = data.data;\r\n    this.total = data.total;\r\n    this.setState({\r\n      resList: list\r\n    });\r\n    \r\n    // 分组时，设置选中状态\r\n    this.state.inChangeGroup && this.resetSelectd(list);\r\n  }\r\n\r\n  onFilterSelectChange (value: string) {\r\n    this.filterGroup = value;\r\n    this.setState({selectedRowKeys: []});\r\n    this.reloadRes();\r\n  }\r\n\r\n  startChangeGroup() {\r\n    this.setState({ \r\n      selectedRowKeys: [],\r\n      inChangeGroup: !this.state.inChangeGroup\r\n     });\r\n  }\r\n\r\n  async doChangeGroup() {\r\n    this.setState({ \r\n      inChangeGroup: false,\r\n      selectedRowKeys: []\r\n    });\r\n    const id = this.inChangeGroupId\r\n    if (!id) {\r\n      message.error('请选分组');\r\n      return;\r\n    }\r\n    // 没在组里面，添加的\r\n    const adds: string[] = [];\r\n    // 在组里面，被取消的\r\n    const subs: string[] = [];\r\n\r\n    this.state.resList.forEach(o => {\r\n      const isSelectd = this.state.selectedRowKeys.includes(o._id)\r\n\r\n      if (isSelectd && (!o.groups || !o.groups.includes(id))) {\r\n        adds.push(o._id);\r\n      }\r\n      if (!isSelectd && o.groups && o.groups.includes(id)) {\r\n        subs.push(o._id);\r\n      }\r\n    })\r\n\r\n    if (adds.length + subs.length == 0) {\r\n      message.info('未作改变')\r\n      return;\r\n    }\r\n\r\n    await axios({\r\n      method: 'put',\r\n      url: '/res/group/' + id,\r\n      data: {adds, subs}\r\n    });\r\n    await this.reloadRes(this.state.page);\r\n  }\r\n\r\n  onRowSelectChange = (selectedRowKeys: any) => {\r\n    this.setState({ selectedRowKeys });\r\n  }\r\n\r\n  resetSelectd(list: res[]) {\r\n    if (this.inChangeGroupId) {\r\n      const keys: string[] = []\r\n      list.forEach((item: any) => {\r\n        item.groups && item.groups.includes(this.inChangeGroupId) && keys.push(item._id);\r\n      })\r\n      this.setState({selectedRowKeys: keys});\r\n    }\r\n  }\r\n\r\n  onNewSelectChange (value: string) {\r\n    this.inChangeGroupId = value;\r\n    this.resetSelectd(this.state.resList)\r\n  }\r\n\r\n  editIndex: number = 0;\r\n  async changCurrent (num: number) {\r\n    const index = this.editIndex + num;\r\n    const page = this.state.page;\r\n    const total = this.total;\r\n    const pageSize = this.pageSize;\r\n    const windex = (page - 1) * pageSize + index;\r\n    // 临界\r\n    if (windex < 0) {\r\n      message.info('翻到顶了')\r\n    } else if (windex > total - 1) {\r\n      message.info('翻到底了')      \r\n    } else if (index < 0 || index > pageSize - 1) {\r\n      // 翻页\r\n      await this.reloadRes(this.state.page + num);\r\n      setTimeout(() => {\r\n        const new_index = (index + pageSize) % pageSize;\r\n        this.editResModal && this.editResModal.showEdit(this.state.resList[new_index])\r\n        this.editIndex = new_index;\r\n      }, 10);\r\n    } else {\r\n      this.editResModal && this.editResModal.showEdit(this.state.resList[index])\r\n      this.editIndex = index;\r\n    }\r\n  }\r\n\r\n  openEdit (record: res, index: number) {\r\n    this.editIndex = index;\r\n    this.editResModal && this.editResModal.showEdit(record)\r\n  }\r\n\r\n  async componentDidMount () {\r\n    this.reloadRes();\r\n    const list: group[] = await getGroups()\r\n    const groupMap: {[index: string]: group} = {}\r\n    list.forEach(item => {\r\n      groupMap[item._id] = item\r\n    })\r\n    this.setState({ groupMap })\r\n  }\r\n\r\n  render() {\r\n    const { loading, selectedRowKeys } = this.state;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onRowSelectChange,\r\n    };\r\n    return (\r\n      <div>\r\n        <Button style={{ marginRight: 8 }}><Link to=\"/resources/upload\">上传</Link></Button>\r\n        <GroupSelect change={(value: string) => this.onFilterSelectChange(value)}></GroupSelect>\r\n        <Search\r\n          placeholder=\"关键字\"\r\n          onSearch={value => { this.keyWords = value; this.reloadRes(); }}\r\n          style={{ marginLeft: 8, width: 200 }}></Search>\r\n        <Button style={{ marginLeft: 8, marginRight: 8 }} onClick={() => this.startChangeGroup()}>\r\n          { this.state.inChangeGroup ? '放弃修改' : '修改分组' }\r\n        </Button>\r\n        { this.state.inChangeGroup ? \r\n        <Fragment>\r\n          <GroupSelect placeholder=\"目标分组\" hideAll change={(value: string) => this.onNewSelectChange(value)}></GroupSelect>\r\n          <Button style={{marginLeft: 8}} onClick={() => this.doChangeGroup()}>确定分组</Button>\r\n        </Fragment>\r\n        : '' }\r\n        <div style={{ paddingTop: 12 }}></div>\r\n        <div style={{ overflow: 'auto'}}>\r\n          <Table rowSelection={rowSelection} columns={this.columns} dataSource={this.state.resList} rowKey=\"_id\"\r\n            loading={loading}\r\n            pagination={{\r\n              current: this.state.page,\r\n              hideOnSinglePage: true,\r\n              showSizeChanger: true,\r\n              defaultPageSize: this.pageSize,\r\n              pageSizeOptions: ['10', '20', '30', '40'],\r\n              total: this.total,\r\n              showQuickJumper: true,\r\n              onChange: (page, pageSize) => {\r\n                pageSize && (this.pageSize = pageSize) \r\n                this.reloadRes(page)\r\n              },\r\n              onShowSizeChange: (current, size) => {\r\n                size && (this.pageSize = size) \r\n                this.reloadRes(current)\r\n              }\r\n            }} />\r\n          </div>\r\n          <EditResModal ref={ins => this.editResModal = ins}\r\n            reloadList={() => this.reloadRes()}\r\n            changeCurrent={(num: number) => this.changCurrent(num)}\r\n            ></EditResModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Resources;","import React, { Component } from 'react';\r\nimport { Upload, Icon, message, Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport Group from './GroupSelect';\r\nimport axios from 'axios'\r\n\r\nconst { Dragger } = Upload;\r\n\r\nclass UploadRes extends Component {\r\n\r\n  state: { groupId: string } = {\r\n    groupId: ''\r\n  }\r\n\r\n  render() {\r\n\r\n    let url = axios.defaults.baseURL + '/res';\r\n    if (this.state.groupId) {\r\n      url += '?groupId=' + this.state.groupId;\r\n    }\r\n    const props = {\r\n      name: 'file',\r\n      multiple: true,\r\n      action: url,\r\n      data: (file: any) => {\r\n        return {\r\n          filename: file.name,\r\n          type: file.type,\r\n          size: file.size\r\n        }\r\n      },\r\n      onChange(info: any) {\r\n        const { status } = info.file;\r\n        if (status !== 'uploading') {\r\n          // console.log(info.file, info.fileList);\r\n        }\r\n        if (status === 'done') {\r\n          message.success(`${info.file.name} file uploaded successfully.`);\r\n        } else if (status === 'error') {\r\n          message.error(`${info.file.name} file upload failed.`);\r\n        }\r\n      },\r\n    };\r\n\r\n\r\n    return (\r\n      <div>\r\n        <Button style={{ marginRight: 8 }}><Link to=\"/resources\">返回</Link></Button>\r\n        <Group change={(value: string) => this.setState({ groupId: value })}></Group>\r\n        <div style={{ paddingTop: 12 }}></div>\r\n        <Dragger {...props}>\r\n          <p className=\"ant-upload-drag-icon\">\r\n            <Icon type=\"inbox\" />\r\n          </p>\r\n          <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n          <p className=\"ant-upload-hint\">\r\n            Support for a single or bulk upload. Strictly prohibit from uploading company data or other\r\n            band files\r\n          </p>\r\n        </Dragger>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UploadRes;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Frame from './components/Frame';\r\nimport Home from './pages/Home';\r\nimport Life from './pages/Life'\r\nimport Resources from './pages/Resources'\r\nimport UploadRes from './pages/Resources/UploadRes'\r\nimport ResGroup from './pages/Resources/ResGroup'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Frame>\r\n          <Route path='/' exact component={Home} />\r\n          <Route path='/home' component={Home} />\r\n          <Route path='/life' component={Life} />\r\n          <Route path='/comments' component={Home} />\r\n          <Route path='/resources' exact component={Resources} />\r\n          <Route path='/resources/upload' component={UploadRes} />\r\n          <Route path='/resources/group' component={ResGroup} />\r\n        </Frame>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport axios from 'axios';\n\n// 全局配置\naxios.defaults.baseURL = '/t2/xucaiyun';\naxios.defaults.headers['Content-Type'] = 'application/json';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}